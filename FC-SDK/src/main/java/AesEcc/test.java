package AesEcc;

//import com.sun.scenario.effect.impl.sw.sse.SSEBlend_SRC_OUTPeer;


import org.junit.Test;

public class test {

    @Test
    public void testEncrypt() throws Exception {
        ECC256 ecc = new ECC256();
        
        //随机生成的公私钥对
        String autoGeneratedPubKey = ecc.getEciesPubKey();
        String autoGeneratedPriKey = ecc.getEciesPriKey();

        //原文
        String msgUtf8 = "hello.hello world!";
        
        //随机生成symKey
        String symKeyHex = AES256.generatorKey();

        //更换symKey,只能是16字节，即32个hex字符
        symKeyHex = "89b66d34fd737e97e3e8d9dffe35236a";
        String cipherMsg = AES256.encryptFc(msgUtf8,symKeyHex);

        //更换公钥
        String setPubKey = "030be1d7e633feb2338a74a860e76d893bac525f35a5813cb7b21e27ba1bc8312a";
        ecc.setEciesPubKey(setPubKey);

        //用该公钥对symkey做ECC非对称加密
        String cipherSymKeyBase64 = ecc.encrypt(symKeyHex);

        //更换私钥，会计算出公钥同时替换
        String setPriKey = "L2bHRej6Fxxipvb4TiR5bu1rkT3tRp8yWEsUy4R1Zb8VMm2x7sd8";
        ecc.setEciesPriKey(setPriKey);
        
        //用该私钥ECC解密获得symKey
        String symKeyDecrypted = ecc.decrypt(cipherSymKeyBase64);

        //用解密获得的symKey对原文做AES对称加密
        String msgDecrypted = AES256.decryptFc(cipherMsg,symKeyDecrypted);

        //输出
        System.out.println("\n# msg: ");
        System.out.println(msgUtf8);
        System.out.println("\n# symKey: ");
        System.out.println(symKeyHex);
        System.out.println("\n# cipherMsg: ");
        System.out.println(cipherMsg);
        System.out.println("\n# autoGeneratedPubKey: ");
        System.out.println(autoGeneratedPubKey);
        System.out.println("\n# autoGeneratedPriKey: ");
        System.out.println(autoGeneratedPriKey);
        System.out.println("\n# setPubKey: ");
        System.out.println(setPubKey);
        System.out.println("\n# setPriKey: ");
        System.out.println(setPriKey);
        System.out.println("\n# symKeyDecrypted: ");
        System.out.println(symKeyDecrypted);
        System.out.println("\n# msgDecrypted: ");
        System.out.println(msgDecrypted);
    }
}
